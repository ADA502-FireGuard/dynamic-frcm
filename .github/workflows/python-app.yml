# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
    
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
        
      - name: Cache of poetry install
        uses: actions/cache@v4
        with:
          path: ~/.local
          key: poetry-1.7.1

      - name: Install poetry v. 1.7.1
      - uses: Gr1N/setup-poetry@v8
        with:
        poetry-version: "1.7.1"
      - run: poetry --version
        env: 
          POETRY_VIRTUALENVS_CREATE=true
          POETRY_VIRTUALENVS_IN_PROJECT=true
          POETRY_VIRTUALENVS_PATH={cache-dir}/virtualenvs/

      - name: Cache all dependencies
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: .venv
          key: pydeps-${{ hashFiles('**/poetry.lock') }}
          
      - run: poetry install --no-interaction --no-root
        if: steps.cache-deps.outputs.cache-hit != 'true'

      - run: poetry install --no-interaction

      - run: poetry run pytest
